#usda 1.0
(
    customLayerData = {
        string creator = "Reality Composer Pro Version 2.0 (448.100.11)"
    }
    defaultPrim = "GameRoot"
    metersPerUnit = 1
    upAxis = "Y"
)

def Xform "GameRoot"
{
    reorder nameChildren = ["Ground", "Pivot"]
    float3 xformOp:scale = (1, 1, 1)
    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

    def Xform "Pivot" (
        active = true
    )
    {
        reorder nameChildren = ["Sun", "Pond", "Rocks", "Ground", "Trees"]
        float3 xformOp:scale = (1, 1, 1)
        float3 xformOp:translate = (0, 0.1, 0)
        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

        def Cube "Ground" (
            active = true
            prepend apiSchemas = ["MaterialBindingAPI"]
        )
        {
            rel material:binding = </GameRoot/Pivot/Ground/GroundMaterial>
            double size = 1
            quatf xformOp:orient = (1, 0, 0, 0)
            float3 xformOp:scale = (1, 0.01, 1)
            float3 xformOp:translate = (0, -0.05, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def Material "GroundMaterial"
            {
                token outputs:mtlx:surface
                token outputs:realitykit:vertex
                token outputs:surface.connect = </GameRoot/Pivot/Ground/GroundMaterial/DefaultSurfaceShader.outputs:surface>

                def Shader "DefaultSurfaceShader"
                {
                    uniform token info:id = "UsdPreviewSurface"
                    color3f inputs:diffuseColor = (0, 0.56284225, 0.31881666) (
                        colorSpace = "srgb_texture"
                    )
                    float inputs:roughness = 0.5
                    token outputs:surface
                }
            }

            def RealityKitComponent "GroundingShadow"
            {
                bool enableIBLShadow = 0
                bool enableMeshShadow = 0
                bool enableReceiveIBLShadow = 1
                bool enableReceiveMeshShadow = 1
                uniform token info:id = "RealityKit.GroundingShadow"
            }

            def RealityKitCustomComponent "RealityKitContent_SpawnerComponent"
            {
                uniform token info:id = "RealityKitContent.SpawnerComponent"
                double minimumSpawnRate = 1.5
                double rateDecrementalFactor = 0.0003
                bool shouldDecreaseSpawnRate = 1
                int spawnMaximum = 3
                double spawnRate = 3
            }
        }

        def Xform "Trees" (
            active = true
        )
        {
            reorder nameChildren = ["Tree", "Tree_Small", "Tree_Big"]
            float3 xformOp:translate = (0, -0.05, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def "Tree_Small" (
                active = true
                references = @Prefabs/Tree.usda@
            )
            {
                quatf xformOp:orient = (0.99999994, 0, 0, 0)
                float3 xformOp:scale = (0.74999994, 0.74999994, 0.74999994)
                float3 xformOp:translate = (-0.363, 2.2351742e-8, 0.37)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def "Tree_Big" (
                active = true
                references = @Prefabs/Tree.usda@
            )
            {
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (1, 0, 0, 0)
                float3 xformOp:scale = (1.25, 1.25, 1.25)
                float3 xformOp:translate = (0.34, 3.9488077e-7, -0.223)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def "Tree" (
                active = true
                references = @Prefabs/Tree.usda@
            )
            {
                quatf xformOp:orient = (0.99999994, 0, 0, 0)
                float3 xformOp:scale = (0.99999994, 0.99999994, 0.99999994)
                float3 xformOp:translate = (-0.295, 2.2351742e-8, -0.265)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }

        def "Pond" (
            active = true
            customData = {
                float3 rotationEulerHint = (0, -2.3561945, 0)
            }
            references = @Prefabs/Pond.usda@
        )
        {
            quatf xformOp:orient = (-0.3826834, 0, 0.92387956, 0)
            float3 xformOp:scale = (0.99999994, 0.99999994, 0.99999994)
            float3 xformOp:translate = (0.25, -0.045, 0.27)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
        }

        def Xform "Rocks" (
            active = true
        )
        {
            float3 xformOp:translate = (0, -0.05, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            def "Rock" (
                active = true
                customData = {
                    float3 rotationEulerHint = (0, 1.3089967, 0)
                }
                references = @Prefabs/Rock.usda@
            )
            {
                quatf xformOp:orient = (0.7933534, 0, 0.60876137, 0)
                float3 xformOp:scale = (0.9999998, 0.9999999, 0.9999998)
                float3 xformOp:translate = (-0.32, 2.2351742e-8, 0.178)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def "Rock_Big" (
                active = true
                customData = {
                    float3 rotationEulerHint = (0, -0.78539807, 0)
                }
                references = @Prefabs/Rock.usda@
            )
            {
                float2 ui:nodegraph:node:pos = (20, 20)
                int ui:nodegraph:node:stackingOrder = 1
                quatf xformOp:orient = (0.92387956, 0, -0.38268334, 0)
                float3 xformOp:scale = (1.2499999, 1.25, 1.2499999)
                float3 xformOp:translate = (0.35, 2.2351742e-8, 0.403)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }

            def "Rock_Small" (
                active = true
                customData = {
                    float3 rotationEulerHint = (0, -2.3561945, 0)
                }
                references = @Prefabs/Rock.usda@
            )
            {
                float2 ui:nodegraph:node:pos = (40, 40)
                int ui:nodegraph:node:stackingOrder = 2
                quatf xformOp:orient = (-0.38268334, 0, 0.92387956, 0)
                float3 xformOp:scale = (0.99999994, 0.9999999, 0.99999994)
                float3 xformOp:translate = (0, 2.2351742e-8, -0.288)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]
            }
        }

        def "Sun" (
            active = true
            customData = {
                float3 rotationEulerHint = (-0.785398, 3.1415927, 0)
            }
            references = @Prefabs/Sun.usda@
        )
        {
            reorder nameChildren = ["Pivot", "Face"]
            quatf xformOp:orient = (-4.038405e-8, 1.6727622e-8, 0.92387956, 0.3826834)
            float3 xformOp:scale = (0.99999994, 0.99999994, 0.99999994)
            float3 xformOp:translate = (0, 0.75, -0.5)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:orient", "xformOp:scale"]

            over "Pivot"
            {
                over "Sun"
                {
                    over "DirectionalLight"
                    {
                        float3 xformOp:translate = (0, 0, 0)
                    }

                    def RealityKitComponent "MeshSorting"
                    {
                        rel group = </GameRoot/Pivot/Sun/Model_Sorting_Group>
                        uniform token info:id = "RealityKit.MeshSorting"
                        int priorityInGroup = 1
                    }

                    over "Billboard"
                    {
                    }

                    over "Face"
                    {
                        over "FaceMaterial"
                        {
                            over "Opacity_Mask"
                            {
                                float2 ui:nodegraph:node:pos = (-482.27762, 380.01117)
                                int ui:nodegraph:node:stackingOrder = 170
                            }

                            over "Texture"
                            {
                                int ui:nodegraph:node:stackingOrder = 172
                            }
                        }
                    }
                }
            }

            over "Model_Sorting_Group"
            {
                token depthPass = "None"
            }
        }
    }
}

